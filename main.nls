extensions [ csv ]


; define all the different types of turtles and links
breed [governments government]
breed [ports port]
breed [companies company]
breed [storages storage]
directed-link-breed [pipelines pipeline]


; define all the gloabl variables (includes the KPIs)
; some global variables are defined in the interface
globals [
  ;provided numbers
  max_capacity_capture_technology      ; in Mt Co2
  price_capture_technology_per_ton_co2     ; in  EUR per t Co2
  electricity_price                        ; in EUR per ton CO2
  co2_per_ton_oil
  min_oil_demand                           ; every company will be given a random oil demand between the min and max value
  max_oil_demand
  connection_costs                         ; costs per company to get connected to the pipeline 
  opex_pipeline_extensible                 ; cost to use the pipeline in EUR / t CO2 if extensible
  opex_pipeline_fixed                      ; cost to use the pipeline in EUR / t CO2 if fixed
  current_CO2_fine
  total_subsidy_companies_per_ton_co2
  total_subsidy_port
  electricty_needed_per_t_co2
  
  ;data files
  data_list_co2_fines
  data_list_oil_prices
  data_list_locations
  data_list_industry
  data_list_costs
  
  ;KPI to be tracked
  electricty_used
  total_system_co2_produced
  total_system_co2_emitted_to_air
  total_system_co2_stored
  total_system_industry_cost_to_store_co2
  total_system_subsidy_to_pipelines
  total_system_subsidy_to_companies
  
  ; LISTS WITH HISTORIC VALUES
  history_co2_fine
;  history_max_capacity_capture_technology
;  history_price_capture_technology_per_ton_co2
  
  ; current run number
  current_run
  run_done?
  
]
 

; loads list of all possible locations for storages
to load_data
  set data_list_co2_fines csv:from-file "co2_price.csv"
  set data_list_oil_prices csv:from-file "oil_price.csv"
  set data_list_locations csv:from-file "locations.csv"
  set data_list_industry csv:from-file "industry.csv"
  set data_list_costs csv:from-file "costs.csv"
end




to setup 
  clear-all
  reset-ticks
  

  print "new set-up"
  
  ; LOAD THE PROVIDED DATA
  load_data
;  print "done loading data files"
  
  set run_done? false
  
  ;INITIALIZING THE KPI
  ; all variables are per year and have to be reset at the beginning of every tick 
  ;(except total_system_co2_produced since this is constant)
  set total_system_co2_produced 0
  set total_system_co2_emitted_to_air 0
  set total_system_co2_stored 0
  set total_system_industry_cost_to_store_co2 0
  set total_system_subsidy_to_pipelines 0
  set total_system_subsidy_to_companies 0
  set electricty_used 0
  
  
  ;INITIALIZING OTHER GLOBAL VARIABLES BASED ON THE PROVIDED DATASETS
;  set electricity_price (item  1 item 6 data_list_costs)
;  set electricity_price 0
  set electricity_price (item  1 item 6 data_list_costs) / 100
  
  
  set co2_per_ton_oil (item 1 item 4 data_list_industry)    ; tons of co2 per ton oil
  set max_capacity_capture_technology 5 * 1000000      ; t per year
  set price_capture_technology_per_ton_co2 (item  1 item 1 data_list_costs)
  set connection_costs (item 1 item 3 data_list_costs) * 1000000
  set min_oil_demand ((item 1 item 2  data_list_industry) * 1000000) / 10  ; changed
  set max_oil_demand ((item 1 item 3  data_list_industry) * 1000000) / 10   ; changed
  set opex_pipeline_extensible (item  1 item 4 data_list_costs)
  set opex_pipeline_fixed (opex_pipeline_extensible * (item  1 item 5 data_list_costs) / 100)
  set electricty_needed_per_t_co2 (item  1 item 2 data_list_costs)
  
  ; INITIALIZE THE HISTORIC LISTS (keep track of the values over time)
  set history_co2_fine []
;  set history_max_capacity_capture_technology []
;  set history_price_capture_technology_per_ton_co2 []
  
;  set history_max_capacity_capture_technology lput max_capacity_capture_technology history_max_capacity_capture_technology
;  set history_price_capture_technology_per_ton_co2 lput price_capture_technology_per_ton_co2 history_price_capture_technology_per_ton_co2
  
  
  
  setup-turtles
  
  ; INITIALIZE THE STARTING AMOUNT OF CO2 PRODUCED AND EMITTED TO THE AIR
  ;add up all the amounts of co2 produced and emmited by every company
  ask companies [ 
    set total_system_co2_produced (total_system_co2_produced + tons_co2_produced_this_company)
    set total_system_co2_emitted_to_air (total_system_co2_produced)
  ]
  
  ask ports [
    announce_new_storage_location
  ]
  
;  type "total_system_co2_produced in Mt: " type total_system_co2_produced / 1000000 type "\n"
;  type "total_system_co2_emitted_to_air in Mt: " type total_system_co2_emitted_to_air / 1000000 type "\n"
  
end







 
to setup-turtles
  set-default-shape companies "factory"
  set-default-shape storages "co2"
  
  ;CREATE GOVERNMENT AND PORT TURTLES
  ;create one government and one port of rotterdam turtle
  create-governments 1 [
    setxy random-xcor random-ycor
    hide-turtle                              ;the turtles should be invisible
  ]
  create-ports 1 [
    setxy random-xcor random-ycor
    set recovery_period 15
    hide-turtle
  ]
  
  
  ; CREATE THE COMPANIES
  ;create companies
  create-companies number_of_companies [ 
    setxy (0.1 + 0.7 * random max-pxcor) (random-ycor)
    set size 2
    set color blue 
    
    set payback_period ((random 20) + 1)                                                   ; random number between 1 and 20 years
    set oil_needed ((random (max_oil_demand - min_oil_demand)) + min_oil_demand)           ; oil demand for that company in tons per year
    set tons_co2_produced_this_company (oil_needed * co2_per_ton_oil)
    set tons_co2_emitted_this_company (tons_co2_produced_this_company)
    set tons_co2_stored_this_company 0 
  ]
  
;  print "ready to go"
;  print ""
;  print ""
end




to go
  ; CHECK FOR END CONDITIONS
  ; runs from 2019 until 2050
  if ticks >= 32 [
    PRINT "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"
    print "HIGHEST TICK HAS BEEN REACHED; MODEL IS DONE"
    PRINT "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"
    set run_done? true
    stop
   ]
  
  
  ; end if there is no more co2 being emitted to the air
  if (total_system_co2_emitted_to_air <= 0) [
    PRINT "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"
    print "NO MORE CO2 EMITTED TO AIR; MODEL IS DONE"
    PRINT "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"
    set run_done? true
    stop
  ]
  
  
  
  ; ALL TURTLES DO THEIR ACTIONS
  ask governments [do_government_actions]
  
  ask ports [do_port_actions]
  if (not any? storages with [open_to_join?] ) [       ; end the program once the last location has been filled
    PRINT "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"
    print "NO MORE PIPELINES LEFT TO JOIN; MODEL IS DONE"
    PRINT "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"
;    print "price capture techn per ton co2"
;    print history_price_capture_technology_per_ton_co2
;    print "max cap capture tech"
;    print history_max_capacity_capture_technology
    set run_done? true
    stop
  ]   
  
  ask companies [do_company_actions]  
  

  
  
  ;TRACK YEARLY KPI
 
  ; reset values for this year
  set total_system_industry_cost_to_store_co2 0
  set total_system_co2_emitted_to_air 0
  set total_system_co2_stored 0
  
  
  
  ask companies [
    ; track the co2 emitted in total and co2 stored at the end of the tick 
    set total_system_co2_emitted_to_air (total_system_co2_emitted_to_air + tons_co2_emitted_this_company)
    set total_system_co2_stored (total_system_co2_stored + tons_co2_stored_this_company)
    ; track the industry costs for this year and then reset back to 0 for the next tick
    set total_system_industry_cost_to_store_co2 (total_system_industry_cost_to_store_co2 + total_yearly_price_CO2_storage)
    
  ]
  
  ; track the amount of electricity used for storage
  set electricty_used (total_system_co2_stored * electricty_needed_per_t_co2)
  
    
  ; store in CSV file
  file-open "results.csv"
  file-print csv:to-row (list current_run ticks   total_system_co2_emitted_to_air   total_system_co2_stored
                         total_system_industry_cost_to_store_co2    total_system_subsidy_to_pipelines
                         total_system_subsidy_to_companies   electricty_used )
  file-close
  
  
  set total_system_subsidy_to_pipelines 0
  set total_system_subsidy_to_companies 0
   
  
  
  ;CHANGE VALUES THAT IN-/DECREASE YEARLY (ENVIRONMENT)
  ; electricty price set by external environment = old electricty price decreased by 5% per year
  set electricity_price (electricity_price * 0.95)
  
  ; maximum capture technology capacity increases by 10% per year
  set max_capacity_capture_technology (max_capacity_capture_technology * 1.1)
;  set history_max_capacity_capture_technology lput max_capacity_capture_technology history_max_capacity_capture_technology
  
  ; price for the capture technology decreases every year by 10%
  set price_capture_technology_per_ton_co2 (price_capture_technology_per_ton_co2 * 0.9)
;  set history_price_capture_technology_per_ton_co2 lput price_capture_technology_per_ton_co2 history_price_capture_technology_per_ton_co2
  
  

  
  
;  print ""
;  print ""
;  print ""
;  print "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"

  
  tick
end











; WE JUST RESET THE VALUES THAT NEED TO BE RE-INITIALIZED
to reset
  clear-ticks
  clear-turtles
  clear-drawing
  clear-all-plots
  clear-output
  
  reset-ticks
  
  set run_done? false
  
  ;INITIALIZING THE KPI
  ; all variables are per year and have to be reset at the beginning of every tick 
  ;(except total_system_co2_produced since this is constant)
  set total_system_co2_produced 0
  set total_system_co2_emitted_to_air 0
  set total_system_co2_stored 0
  set total_system_industry_cost_to_store_co2 0
  set total_system_subsidy_to_pipelines 0
  set total_system_subsidy_to_companies 0
  set electricty_used 0
  
  
  ;INITIALIZING OTHER GLOBAL VARIABLES BASED ON THE PROVIDED DATASETS
;  set electricity_price (item  1 item 6 data_list_costs)
;  set electricity_price 0
  set electricity_price (item  1 item 6 data_list_costs) / 100
  set max_capacity_capture_technology 5 * 1000000      ; t per year
  set price_capture_technology_per_ton_co2 (item  1 item 1 data_list_costs)
 
  
  ; INITIALIZE THE HISTORIC LISTS (keep track of the values over time)
  set history_co2_fine []
  
  setup-turtles
  
  ; INITIALIZE THE STARTING AMOUNT OF CO2 PRODUCED AND EMITTED TO THE AIR
  ;add up all the amounts of co2 produced and emmited by every company
  ask companies [ 
    set total_system_co2_produced (total_system_co2_produced + tons_co2_produced_this_company)
    set total_system_co2_emitted_to_air (total_system_co2_produced)
  ]
  
  ask ports [
    announce_new_storage_location
  ]
  
end




















